{"version":3,"sources":["actions/actions.js","components/CalcPalette/CalcPalette.js","components/Desk/Desk.js","components/App/App.js","reducers/CalcReducer.js","components/Button/Button.js","components/Digital-block/DigitalBlock.js","components/Display/Display.js","components/Equal-block/EqualBlock.js","reducers/DragReducer.js","components/Operations/Operations.js","reducers/reducer.js","components/App/store.js","index.js"],"names":["addDigit","payload","type","setBlocks","setDroppableSection","connect","drag","draggableBlock","droppableSection","constructorModeEnable","blocks","dispatch","dragging","element","section","dragEnd","useState","index","setIndex","className","map","block","component","draggable","onDragOver","e","preventDefault","dragOverHandler","onDragStart","item","elemIdx","indexOf","setTimeout","target","style","visibility","dragStartHandler","onDragEnd","updatedState","slice","dragEndHandler","onDrop","dropHandler","id","changeConstructorMode","setDraggableBlock","items","desk","setDesk","filled","setFill","FormGroup","FormControlLabel","control","Switch","onChange","defaultChecked","label","backgroundColor","onDragLeave","dragLeaveHandler","itemId","state","newState","push","onDblClick","blockIndex","sectionIndex","findIndex","updatedPalette","newDesk","splice","removeBlockFromDesk","App","initialState","currentOperand","previousOperand","operation","evaluated","evaluate","calc","prev","parseFloat","current","isNaN","computation","toString","CalcReducer","undefined","length","includes","newValue","value","clickHandle","onClick","digit","onDoubleClick","isDraging","name","Display","chooseOperation","DigitalBlock","EqualBlock","DragReducer","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3dcf147.chunk.js","sourcesContent":["const addDigit = (payload) => {\r\n\treturn { type: 'ADD_DIGIT', payload: payload };\r\n};\r\n\r\nconst chooseOperation = (payload) => {\r\n\treturn { type: 'CHOOSE_OPERATION', payload: payload };\r\n};\r\n\r\nconst setBlocks = (payload) => {\r\n\treturn { type: 'SET_BLOCKS', payload: payload };\r\n};\r\n\r\nconst setDraggableBlock = (payload) => {\r\n\treturn { type: 'SET_DRAGGABLE_BLOCK', payload: payload };\r\n};\r\n\r\nconst evaluate = () => {\r\n\treturn { type: 'EVALUATE' };\r\n};\r\n\r\nconst dragEnd = () => {\r\n\treturn { type: 'DRAG_END' };\r\n};\r\n\r\nconst dragging = (payload) => {\r\n\treturn { type: 'DRAG_START', payload: payload };\r\n};\r\n\r\nconst setDroppableSection = (payload) => {\r\n\treturn { type: 'SET_DROPPABLE_SECTION', payload: payload };\r\n};\r\n\r\nconst changeConstructorMode = () => {\r\n\treturn { type: 'CHANGE_CONSTRUCTOR_MODE' };\r\n};\r\nexport {\r\n\taddDigit,\r\n\tchooseOperation,\r\n\tevaluate,\r\n\tdragging,\r\n\tsetDroppableSection,\r\n\tchangeConstructorMode,\r\n\tdragEnd,\r\n\tsetBlocks,\r\n\tsetDraggableBlock,\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n\tdragEnd,\r\n\tdragging,\r\n\tsetDroppableSection,\r\n\tsetBlocks,\r\n} from '../../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport './CalcPalette.css';\r\n\r\nconst CalcPalette = ({\r\n\tdraggableBlock,\r\n\tdroppableSection,\r\n\tdragging,\r\n\tconstructorModeEnable,\r\n\tsetDroppableSection,\r\n\tdragEnd,\r\n\tblocks,\r\n\tsetBlocks,\r\n}) => {\r\n\tconst [index, setIndex] = useState(null);\r\n\r\n\tconst dragOverHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\tconst dragStartHandler = (e, item) => {\r\n\t\tconst elemIdx = blocks.indexOf(item);\r\n\t\tif (constructorModeEnable) {\r\n\t\t\tsetIndex(elemIdx);\r\n\t\t\tdragging(item);\r\n\t\t\tsetTimeout(() => (e.target.style.visibility = 'hidden'), 50);\r\n\t\t}\r\n\t\treturn;\r\n\t};\r\n\r\n\tconst dragEndHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (droppableSection) {\r\n\t\t\tconst updatedState = [\r\n\t\t\t\t...blocks.slice(0, index),\r\n\t\t\t\t...blocks.slice(index + 1),\r\n\t\t\t];\r\n\t\t\tsetBlocks(updatedState);\r\n\t\t\tsetDroppableSection(null);\r\n\t\t}\r\n\t\tdragEnd();\r\n\t\te.target.style.visibility = 'visible';\r\n\t};\r\n\r\n\tconst dropHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (droppableSection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst updatedState = [\r\n\t\t\t...blocks.slice(0, index - 1),\r\n\t\t\tdraggableBlock,\r\n\t\t\t...blocks.slice(index),\r\n\t\t];\r\n\t\tsetBlocks(updatedState);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"calc-palete d-flex flex-column\">\r\n\t\t\t{blocks.map((block) => (\r\n\t\t\t\t<block.component\r\n\t\t\t\t\tkey={block.id}\r\n\t\t\t\t\tdraggable={constructorModeEnable}\r\n\t\t\t\t\tonDragOver={(e) => dragOverHandler(e)}\r\n\t\t\t\t\tonDragStart={(e) => dragStartHandler(e, block)}\r\n\t\t\t\t\tonDragEnd={(e) => dragEndHandler(e)}\r\n\t\t\t\t\tonDrop={(e) => dropHandler(e)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tdrag: { draggableBlock, droppableSection, constructorModeEnable, blocks },\r\n}) => {\r\n\treturn {\r\n\t\tdraggableBlock: draggableBlock,\r\n\t\tdroppableSection: droppableSection,\r\n\t\tconstructorModeEnable: constructorModeEnable,\r\n\t\tblocks: blocks,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdragging: (element) => dispatch(dragging(element)),\r\n\t\tsetDroppableSection: (section) => dispatch(setDroppableSection(section)),\r\n\t\tdragEnd: () => dispatch(dragEnd()),\r\n\t\tsetBlocks: (blocks) => dispatch(setBlocks(blocks)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalcPalette);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\tchangeConstructorMode,\r\n\tsetDroppableSection,\r\n\tdragEnd,\r\n\tsetBlocks,\r\n\tsetDraggableBlock,\r\n} from '../../actions/actions';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport './Desk.css';\r\n\r\nconst Desk = ({\r\n\tdraggableBlock,\r\n\tsetDroppableSection,\r\n\tchangeConstructorMode,\r\n\tconstructorModeEnable,\r\n\tblocks,\r\n\tsetBlocks,\r\n\tsetDraggableBlock,\r\n}) => {\r\n\tconst [desk, setDesk] = useState([\r\n\t\t{ id: 1, section: 'top', items: [] },\r\n\t\t{ id: 2, section: 'middle', items: [] },\r\n\t\t{ id: 3, section: 'bottom', items: [] },\r\n\t]);\r\n\r\n\tconst [filled, setFill] = useState(false);\r\n\r\n\tconst dragOverHandler = (e, section) => {\r\n\t\te.preventDefault();\r\n\t\tif (e.target.className === 'desk-item') {\r\n\t\t\te.target.style.backgroundColor = 'rgba(0, 159, 249, 0.4)';\r\n\t\t}\r\n\t\tsetDroppableSection(section);\r\n\t};\r\n\r\n\tconst removeBlockFromDesk = (block, section) => {\r\n\t\tif (!constructorModeEnable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetDraggableBlock(block);\r\n\t\tconst blockIndex = section.items.indexOf(block);\r\n\t\tconst sectionIndex = desk.findIndex(\r\n\t\t\t(item) => item.section === section.section\r\n\t\t);\r\n\r\n\t\tconst updatedPalette = [\r\n\t\t\t...blocks.slice(0, block.id - 1),\r\n\t\t\tblock,\r\n\t\t\t...blocks.slice(block.id - 1),\r\n\t\t];\r\n\r\n\t\tsetDesk((state) => {\r\n\t\t\tconst newDesk = state.slice();\r\n\t\t\tnewDesk[sectionIndex].items.splice(blockIndex, 1);\r\n\t\t\treturn newDesk;\r\n\t\t});\r\n\t\tsetBlocks(updatedPalette);\r\n\t\tsetDraggableBlock(null);\r\n\t};\r\n\r\n\tconst dropHandler = (e, section) => {\r\n\t\te.preventDefault();\r\n\t\tif (e.target.className === 'desk-item') {\r\n\t\t\te.target.style.backgroundColor = '';\r\n\t\t}\r\n\r\n\t\tif (!draggableBlock) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst itemId = desk.indexOf(section);\r\n\r\n\t\tsetDesk((state) => {\r\n\t\t\tlet newState = state.slice();\r\n\t\t\tnewState[itemId].items.push(draggableBlock);\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t\tdragEnd();\r\n\t\tsetFill(true);\r\n\t};\r\n\r\n\tconst dragLeaveHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (e.target.className === 'desk-item') {\r\n\t\t\te.target.style.backgroundColor = '';\r\n\t\t}\r\n\t\tsetDroppableSection(null);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"right-side\">\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={<Switch onChange={changeConstructorMode} defaultChecked />}\r\n\t\t\t\t\tlabel={`Constructor Mode ${constructorModeEnable ? 'On' : 'Off'}`}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t\t<div className=\"desk\">\r\n\t\t\t\t{desk.map((section) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={section.id}\r\n\t\t\t\t\t\tonDragOver={(e) => dragOverHandler(e, section)}\r\n\t\t\t\t\t\tonDragLeave={(e) => dragLeaveHandler(e)}\r\n\t\t\t\t\t\tonDrop={(e) => dropHandler(e, section)}\r\n\t\t\t\t\t\tclassName=\"desk-item\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{section.items.map((item) => (\r\n\t\t\t\t\t\t\t<item.component\r\n\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\tonDblClick={() => removeBlockFromDesk(item, section)}\r\n\t\t\t\t\t\t\t\tdraggable={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t{filled ? null : (\r\n\t\t\t\t\t<h5 className=\"deskInfo\">\r\n\t\t\t\t\t\tПеретащите сюда\r\n\t\t\t\t\t\t<p>любой элемент из левой панели</p>\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tdrag: { draggableBlock, constructorModeEnable, blocks },\r\n}) => {\r\n\treturn {\r\n\t\tdraggableBlock: draggableBlock,\r\n\t\tconstructorModeEnable: constructorModeEnable,\r\n\t\tblocks: blocks,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetDroppableSection: (section) => dispatch(setDroppableSection(section)),\r\n\t\tchangeConstructorMode: () => dispatch(changeConstructorMode()),\r\n\t\tdragEnd: () => dispatch(dragEnd()),\r\n\t\tsetBlocks: (blocks) => dispatch(setBlocks(blocks)),\r\n\t\tsetDraggableBlock: (block) => dispatch(setDraggableBlock(block)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Desk);\r\n","import React from 'react';\nimport CalcPalette from '../CalcPalette/CalcPalette';\nimport Desk from '../Desk/Desk';\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container mt-5 d-flex justify-content-evenly align-items-center\">\n\t\t\t<CalcPalette />\n\t\t\t<Desk />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const initialState = {\r\n\tcurrentOperand: null,\r\n\tpreviousOperand: null,\r\n\toperation: null,\r\n\tevaluated: false,\r\n};\r\n\r\nconst evaluate = ({ calc: { currentOperand, previousOperand, operation } }) => {\r\n\tconst prev = parseFloat(previousOperand);\r\n\tconst current = parseFloat(currentOperand);\r\n\tif (isNaN(prev) || isNaN(current)) {\r\n\t\treturn '0';\r\n\t}\r\n\r\n\tlet computation = '';\r\n\r\n\tswitch (operation) {\r\n\t\tcase '+':\r\n\t\t\tcomputation = prev + current;\r\n\t\t\tbreak;\r\n\t\tcase '-':\r\n\t\t\tcomputation = prev - current;\r\n\t\t\tbreak;\r\n\t\tcase '/':\r\n\t\t\tcomputation = prev / current;\r\n\t\t\tbreak;\r\n\t\tcase 'x':\r\n\t\t\tcomputation = prev * current;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn '';\r\n\t}\r\n\r\n\treturn computation.toString();\r\n};\r\n\r\nconst CalcReducer = (state, { type, payload }) => {\r\n\tif (state === undefined) {\r\n\t\treturn initialState;\r\n\t}\r\n\tswitch (type) {\r\n\t\tcase 'ADD_DIGIT':\r\n\t\t\tif (state.drag.constructorModeEnable) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.calc.evaluated ||\r\n\t\t\t\t(state.calc.currentOperand === null && payload !== '.')\r\n\t\t\t) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state.calc,\r\n\t\t\t\t\tcurrentOperand: payload,\r\n\t\t\t\t\tevaluated: false,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (state.calc.currentOperand.length === 11) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (payload === '0' && state.calc.currentOperand === null) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (payload === '.' && state.calc.currentOperand.includes('.')) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state.calc,\r\n\t\t\t\tcurrentOperand: `${state.calc.currentOperand}${payload}`,\r\n\t\t\t};\r\n\r\n\t\tcase 'CHOOSE_OPERATION':\r\n\t\t\tif (state.drag.constructorModeEnable) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.calc.currentOperand === null &&\r\n\t\t\t\tstate.calc.previousOperand == null\r\n\t\t\t) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(!state.calc.evaluated && state.calc.currentOperand === null) ||\r\n\t\t\t\t(state.calc.evaluated &&\r\n\t\t\t\t\tstate.calc.currentOperand === state.calc.previousOperand)\r\n\t\t\t) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state.calc,\r\n\t\t\t\t\toperation: payload,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (state.calc.previousOperand == null) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state.calc,\r\n\t\t\t\t\toperation: payload,\r\n\t\t\t\t\tpreviousOperand: state.calc.currentOperand,\r\n\t\t\t\t\tcurrentOperand: null,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state.calc,\r\n\t\t\t\tcurrentOperand: evaluate(state),\r\n\t\t\t\tpreviousOperand: evaluate(state),\r\n\t\t\t\tevaluated: true,\r\n\t\t\t\toperation: payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'EVALUATE':\r\n\t\t\tif (state.drag.constructorModeEnable) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tstate.calc.operation === null ||\r\n\t\t\t\tstate.calc.currentOperand === null ||\r\n\t\t\t\tstate.calc.previousOperand === null\r\n\t\t\t) {\r\n\t\t\t\treturn state.calc;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state.calc,\r\n\t\t\t\tevaluated: true,\r\n\t\t\t\tcurrentOperand: evaluate(state),\r\n\t\t\t\tpreviousOperand: null,\r\n\t\t\t\toperation: null,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state.calc;\r\n\t}\r\n};\r\n\r\nexport default CalcReducer;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addDigit } from '../../actions/actions';\r\n\r\nconst Button = ({ className, value, clickHandle }) => {\r\n\treturn (\r\n\t\t<div onClick={clickHandle} className={className}>\r\n\t\t\t{value}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddDigit: (newValue) => {\r\n\t\t\tdispatch(addDigit(newValue));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default connect(() => {\r\n\treturn {};\r\n}, mapDispatchToProps)(Button);\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { addDigit } from '../../actions/actions';\r\nimport './DigitalBlock.css';\r\n\r\nconst DigitalBlock = ({\r\n\tonDragEnd,\r\n\tonDragStart,\r\n\taddDigit,\r\n\tdraggable,\r\n\tonDblClick,\r\n}) => {\r\n\tconst numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '.'];\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tdraggable={draggable}\r\n\t\t\tclassName=\"digital-block\"\r\n\t\t\tonDoubleClick={onDblClick}\r\n\t\t>\r\n\t\t\t{numbers.map((item) => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tkey={item}\r\n\t\t\t\t\tvalue={item}\r\n\t\t\t\t\tclassName={`btn btn-outline-secondary numbers_${item}`}\r\n\t\t\t\t\tclickHandle={() => addDigit(item)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddDigit: (digit) => {\r\n\t\t\tdispatch(addDigit(digit));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DigitalBlock);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Display.css';\r\n\r\nconst Display = ({\r\n\tonDragStart,\r\n\tonDragEnd,\r\n\tcurrentOperand,\r\n\tdraggable = true,\r\n\tonDblClick,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tonDoubleClick={onDblClick}\r\n\t\t\tdraggable={draggable}\r\n\t\t\tclassName=\"display\"\r\n\t\t>\r\n\t\t\t<div className=\"display_text-field\">\r\n\t\t\t\t<h3>{currentOperand || '0'}</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ calc: { currentOperand } }) => {\r\n\treturn {\r\n\t\tcurrentOperand: currentOperand,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { evaluate } from '../../actions/actions';\r\nimport './EqualBlock.css';\r\n\r\nconst EqualBlock = ({\r\n\tonDragStart,\r\n\tonDragEnd,\r\n\tevaluate,\r\n\tdraggable = true,\r\n\tonDblClick,\r\n}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tdraggable={draggable}\r\n\t\t\tonDoubleClick={onDblClick}\r\n\t\t\tclassName=\"equal\"\r\n\t\t>\r\n\t\t\t<div onClick={evaluate} className=\"equal_btn btn btn-primary\">\r\n\t\t\t\t=\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tevaluate: () => dispatch(evaluate()),\r\n\t};\r\n};\r\n\r\nexport default connect(() => {\r\n\treturn {};\r\n}, mapDispatchToProps)(EqualBlock);\r\n","import DigitalBlock from '../components/Digital-block/DigitalBlock';\r\nimport Display from '../components/Display/Display';\r\nimport EqualBlock from '../components/Equal-block/EqualBlock';\r\nimport Operations from '../components/Operations/Operations';\r\n\r\nconst initialState = {\r\n\tisDraging: false,\r\n\tdraggableBlock: null,\r\n\tdroppableSection: null,\r\n\tconstructorModeEnable: true,\r\n\tblocks: [\r\n\t\t{ id: 1, name: 'display', component: Display },\r\n\t\t{ id: 2, name: 'operations', component: Operations },\r\n\t\t{ id: 3, name: 'digitalBlock', component: DigitalBlock },\r\n\t\t{ id: 4, name: 'equalBlock', component: EqualBlock },\r\n\t],\r\n};\r\n\r\nconst DragReducer = (state, { type, payload }) => {\r\n\tif (state === undefined) {\r\n\t\treturn initialState;\r\n\t}\r\n\tswitch (type) {\r\n\t\tcase 'SET_BLOCKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tblocks: payload,\r\n\t\t\t};\r\n\t\tcase 'DRAG_START':\r\n\t\t\tif (state.drag.draggableBlock === payload) {\r\n\t\t\t\treturn { ...state.drag };\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tisDraging: true,\r\n\t\t\t\tdraggableBlock: payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'DRAG_END':\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tisDraging: false,\r\n\t\t\t\tdraggableBlock: null,\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_DROPPABLE_SECTION':\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tdroppableSection: payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_DRAGGABLE_BLOCK':\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tdraggableBlock: payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'CHANGE_CONSTRUCTOR_MODE':\r\n\t\t\treturn {\r\n\t\t\t\t...state.drag,\r\n\t\t\t\tconstructorModeEnable: !state.drag.constructorModeEnable,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state.drag;\r\n\t}\r\n};\r\n\r\nexport default DragReducer;\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport { chooseOperation } from '../../actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport './Operations.css';\r\n\r\nconst Operations = ({\r\n\tonDragStart,\r\n\tonDragEnd,\r\n\tchooseOperation,\r\n\tdraggable = true,\r\n\tonDblClick,\r\n}) => {\r\n\tconst operations = ['/', 'x', '-', '+'];\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDragEnd={onDragEnd}\r\n\t\t\tonDoubleClick={onDblClick}\r\n\t\t\tdraggable={draggable}\r\n\t\t\tclassName=\"operations \"\r\n\t\t>\r\n\t\t\t{operations.map((item) => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tkey={item}\r\n\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\r\n\t\t\t\t\tvalue={item}\r\n\t\t\t\t\tclickHandle={() => chooseOperation(item)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tchooseOperation: (operation) => {\r\n\t\t\tdispatch(chooseOperation(operation));\r\n\t\t},\r\n\t};\r\n};\r\nexport default connect(() => {\r\n\treturn {};\r\n}, mapDispatchToProps)(Operations);\r\n","import CalcReducer from './CalcReducer';\r\nimport DragReducer from './DragReducer';\r\n\r\nconst reducer = (state, action) => {\r\n\treturn {\r\n\t\tcalc: CalcReducer(state, action),\r\n\t\tdrag: DragReducer(state, action),\r\n\t};\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\nimport reducer from '../../reducers/reducer';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport store from './components/App/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}